FORMAT: 1A
HOST: https://cms.api.brightcove.com/v1beta1

# CMS API
The CMS API allows creation of video objects and retrieval of video information.

## Base URL

The base URL for these APIs is:

    https://cms.api.brightcove.com/v1beta1

## IDs and Reference IDs

Examples show using video IDs, but you can also use the video's reference ID if you wish. If you use the reference ID you must prepend that identifier with <code>ref:</code>. For example, the first URL uses the video ID, whereas the second uses the reference ID.
* v1beta1/accounts/{accountId}/videos<strong>/123456789</strong>
* v1beta1/accounts/{accountId}/videos<strong>/ref:43219876</strong>

# Group Manage Videos

Create a single video and retrieve various video information. The endpoint is determined by the information requested. Some retrieval requests can use either the video ID or reference ID.

## POST to create a video object/GET information on all videos [/accounts/{accountId}/videos]

### POST
Supply a name and create a video object with that name. The response will contain the ID for the video object.

+ Parameters

    + accountId (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {
                "name": "My New Video"
            }

+ Response 200

    + Body

            {
              "id": "3887610706001",
              "account_id": "1507807800001",
              "complete": false,
              "created_at": "2014-11-12T21:12:52.582Z",
              "cue_points": [],
              "custom_fields": {},
              "description": null,
              "duration": null,
              "economics": "AD_SUPPORTED",
              "geo": null,
              "images": {},
              "link": null,
              "long_description": null,
              "name": "Fish Jumping",
              "reference_id": null,
              "schedule": null,
              "sharing": null,
              "state": "ACTIVE",
              "tags": [],
              "updated_at": "2014-11-12T21:12:52.583Z"
            }

+ Response 400

    + Body

            {}

## List or Search for videos [/accounts/{account_id}/videos?{?limit}{&offset}{&sort}{&q}]

### GET
Use only the account ID and retrieve information on all videos in the account.

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + limit (optional number `25`) ... Number of items to return (any integer up to 100)
    + offset (optional number `50`) ... Number of items to skip (for paging result sets larger than the `limit`
    + sort (optional string `updated_at`) ... Field to sort results on; use `-field` for descending order
        + values
            + `name`
            + `reference_id`
            + `created_at`
            + `published_at`
            + `updated_at`
            + `schedule_starts_at`
            + `schedule_ends_at`
            + `state`
            + `plays_total`
            + `plays_trailing_week`
    + q (optional string `tags:foo+updated_at:2014-06-01..`) ... See <a target="_blank" href="//docs.brightcove.com/en/video-cloud/cms-api/guides/search-videos.html">Search Videos</a>

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            [{
              "id": "3887610706001",
              "account_id": "1507807800001",
              "complete": false,
              "created_at": "2014-11-12T21:12:52.582Z",
              "cue_points": [],
              "custom_fields": {},
              "description": null,
              "duration": null,
              "economics": "AD_SUPPORTED",
              "geo": null,
              "images": {},
              "link": null,
              "long_description": null,
              "name": "Fish Jumping",
              "reference_id": null,
              "schedule": null,
              "sharing": null,
              "state": "ACTIVE",
              "tags": [],
              "updated_at": "2014-11-12T21:12:52.583Z"
            }, {
              "id": "2114345471001",
              "account_id": "1507807800001",
              "complete": true,
              "created_at": "2013-01-23T19:06:16.328Z",
              "cue_points": [{
                "name": "Flying Off",
                "type": "CODE",
                "time": 2.64,
                "metadata": null,
                "force_stop": false,
                "asset_id": null
              }, {
                "name": "Pre-roll",
                "type": "AD",
                "time": 0.0,
                "metadata": null,
                "force_stop": false,
                "asset_id": null
              }, {
                "name": "Bird Back",
                "type": "CODE",
                "time": 5.938,
                "metadata": null,
                "force_stop": false,
                "asset_id": null
              }, {
                "name": "Post-roll",
                "type": "AD",
                "time": 8.242,
                "metadata": null,
                "force_stop": false,
                "asset_id": null
              }],
              "custom_fields": {
                "customfield1": "Approved"
              },
              "description": "Short description for titmouse.",
              "duration": 8242,
              "economics": "AD_SUPPORTED",
              "geo": null,
              "images": {
                "thumbnail": {
                  "id": "3815806023001",
                  "src": "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/2431/1507807800001_3815806023001_thumb.jpg?pubId=1507807800001"
                },
                "poster": {
                  "id": "3815782921001",
                  "src": "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/273/1507807800001_3815782921001_still.jpg?pubId=1507807800001"
                }
              },
              "link": null,
              "long_description": "Long description for titmouse.",
              "name": "Titmouse7",
              "reference_id": "titmouse_title_refid7",
              "schedule": null,
              "sharing": null,
              "state": "ACTIVE",
              "tags": ["bird", "wildlife"],
              "updated_at": "2014-11-12T20:55:01.732Z"
            },
            ...
            {
              "id": "3674727956001",
              "account_id": "1507807800001",
              "complete": false,
              "created_at": "2014-07-14T19:37:40.946Z",
              "cue_points": [],
              "custom_fields": {},
              "description": "Bumper video.",
              "duration": 8775,
              "economics": "AD_SUPPORTED",
              "geo": null,
              "images": {},
              "link": null,
              "long_description": null,
              "name": "Bumper",
              "reference_id": "bumper_title_refidF",
              "schedule": null,
              "sharing": null,
              "state": "ACTIVE",
              "tags": [],
              "updated_at": "2014-07-14T19:37:41.010Z"
            }]

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

## Get a count of results [/accounts/{account_id}/videos{?q}]

### GET

Get a count of items for a list of all videos or a video search

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + q (optional string `tags:foo+updated_at:2014-06-01..`) ... See <a target="_blank" href="//docs.brightcove.com/en/video-cloud/cms-api/guides/search-videos.html">Search Videos</a>

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {"count": 2678}

## GET, update or DELETE a single video [/accounts/{account_id}/videos/{video_id}]

### GET

Use the video ID to retrieve information for a single video

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {
              "id" : "2114345471001",
              "account_id" : "1507807800001",
              "complete" : true,
              "created_at" : "2013-01-23T19:06:16.328Z",
              "cue_points" : [ {
                "name" : "Flying Off",
                "type" : "CODE",
                "time" : 2.64,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Pre-roll",
                "type" : "AD",
                "time" : 0.0,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Bird Back",
                "type" : "CODE",
                "time" : 5.938,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Post-roll",
                "type" : "AD",
                "time" : 8.242,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              } ],
              "custom_fields" : {
                "customfield1" : "Approved"
              },
              "description" : "Short description for titmouse.",
              "duration" : 8242,
              "economics" : "AD_SUPPORTED",
              "geo" : null,
              "images" : {
                "thumbnail" : {
                  "id" : "3815806023001",
                  "src" : "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/2431/1507807800001_3815806023001_thumb.jpg?pubId=1507807800001"
                },
                "poster" : {
                  "id" : "3815782921001",
                  "src" : "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/273/1507807800001_3815782921001_still.jpg?pubId=1507807800001"
                }
              },
              "link" : null,
              "long_description" : "Long description for titmouse.",
              "name" : "Titmouse7",
              "reference_id" : "titmouse_title_refid7",
              "schedule" : null,
              "sharing" : null,
              "state" : "ACTIVE",
              "tags" : [ "bird", "wildlife" ],
              "updated_at" : "2014-11-12T20:55:01.732Z"
            }

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

### PATCH

Update video properties using the video ID to identify video

New values for video properties are passed as a JSON object in the body. The following are special cases to consider:
* For any given property a new value can be supplied and no other fields will be affected
* If the property is an array field ALL array values must be supplied or only the one(s) passed in the body will exist; for instance you cannot update just one cuepoint array element, all cuepoints must be in the JSON object
* If the property is a map field single child properties can be updated, for instance to update part of the schedule map you would use <code>"schedule": {"ends_at": "new value"}</code> in the body

The response will display all video information, with newly updated property values

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {
              "name": "Updated Name",
              "description": "Updated description"
            }

+ Response 200

    + Body

            {
              "id" : "2114345471001",
              "account_id" : "1507807800001",
              "complete" : true,
              "created_at" : "2013-01-23T19:06:16.328Z",
              "cue_points" : [ {
                "name" : "Flying Off",
                "type" : "CODE",
                "time" : 2.64,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Pre-roll",
                "type" : "AD",
                "time" : 0.0,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Bird Back",
                "type" : "CODE",
                "time" : 5.938,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              }, {
                "name" : "Post-roll",
                "type" : "AD",
                "time" : 8.242,
                "metadata" : null,
                "force_stop" : false,
                "asset_id" : null
              } ],
              "custom_fields" : {
                "customfield1" : "Approved"
              },
              "description" : "Short description for titmouse.",
              "duration" : 8242,
              "economics" : "AD_SUPPORTED",
              "geo" : null,
              "images" : {
                "thumbnail" : {
                  "id" : "3815806023001",
                  "src" : "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/2431/1507807800001_3815806023001_thumb.jpg?pubId=1507807800001"
                },
                "poster" : {
                  "id" : "3815782921001",
                  "src" : "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/273/1507807800001_3815782921001_still.jpg?pubId=1507807800001"
                }
              },
              "link" : null,
              "long_description" : "Long description for titmouse.",
              "name" : "Titmouse7",
              "reference_id" : "titmouse_title_refid7",
              "schedule" : null,
              "sharing" : null,
              "state" : "ACTIVE",
              "tags" : [ "bird", "wildlife" ],
              "updated_at" : "2014-11-12T20:55:01.732Z"
            }

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

### DELETE

Use the video ID to delete a single video object.

This delete will not work with the sharer copy of a shared video.

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {}

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]


## GET the images for a specific video [/accounts/{account_id}/videos/{video_id}/images]

### GET
Retrieve video's images by video ID

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {
              "thumbnail": {
                "id": "3815806023001",
                "src": "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/2431/1507807800001_3815806023001_thumb.jpg?pubId=1507807800001"
              },
              "poster": {
                "id": "3815782921001",
                "src": "http://brightcove.vo.llnwd.net/v1/unsecured/media/1507807800001/201410/273/1507807800001_3815782921001_still.jpg?pubId=1507807800001"
              }
            }

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

## GET the sources for a specific video [/accounts/{account_id}/videos/{video_id}/sources]

### GET
Retrieve video's sources by video ID

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            [{
              "id": "2114524848001",
              "app_name": "rtmp://brightcove.fcod.llnwd.net/a500/e1/uds/rtmp/ondemand",
              "stream_name": "mp4:1507807800001/1507807800001_2114524848001_Bird-Titmouse7.mp4&1415833200000&be8221bf06860a465d6ffe517ce24cd0",
              "codec": "H264",
              "container": "MP4",
              "encoding_rate": 116823,
              "duration": 8334,
              "height": 212,
              "width": 400,
              "size": 81366,
              "uploaded_at": "2013-01-23T20:40:00.349Z"
            }, {
              "id": "2114524848001",
              "src": "http://brightcove.vo.llnwd.net/e1/uds/pd/1507807800001/1507807800001_2114524848001_Bird-Titmouse7.mp4",
              "codec": "H264",
              "container": "MP4",
              "encoding_rate": 116823,
              "duration": 8334,
              "height": 212,
              "width": 400,
              "size": 81366,
              "uploaded_at": "2013-01-23T20:40:00.349Z"
            }, {
              "id": "2114524880001",
              "app_name": "rtmp://brightcove.fcod.llnwd.net/a500/e1/uds/rtmp/ondemand",
              "stream_name": "mp4:1507807800001/1507807800001_2114524880001_Bird-Titmouse7.mp4&1415833200000&be8221bf06860a465d6ffe517ce24cd0",
              "codec": "H264",
              "container": "MP4",
              "encoding_rate": 800000,
              "duration": 8242,
              "height": 344,
              "width": 640,
              "size": 758866,
              "uploaded_at": "2013-01-23T20:40:52.716Z"
            },
            ...
            {
              "id": "2114527084001",
              "src": "http://brightcove.vo.llnwd.net/e1/uds/pd/1507807800001/1507807800001_2114527084001_Bird-Titmouse7.mp4",
              "codec": "H264",
              "container": "MP4",
              "encoding_rate": 1633000,
              "duration": 8242,
              "height": 344,
              "width": 640,
              "size": 1573347,
              "uploaded_at": "2013-01-23T20:42:02.990Z"
            }]

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

## GET the playlist IDs that contain a video ID [/accounts/{account_id}/videos/{video_id}/references]

### GET
Retrieve an array of manual playlist IDs that contain a video ID. Note that this request does not look at smart playlists.

You can also use the video's reference ID if you wish:
* v1beta1/accounts/{accountId}/videos/<strong>ref:123456789</strong>/references

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + video_id (required string `12345678`) ... The ID of the video

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {
              "playlists" : [
                "1034308987001",
                "1031699374001",
                "1768196159001"
              ]
            }

+ Response 400

    + Body

            [ {
              "error_code" : "NOT_FOUND",
              "message" : "Resource does not exist."
            } ]

# Group Manage Playlists

## Get a count of playlists [/accounts/{account_id}/counts/playlists]

### GET

Get a count of the playlists in the account.

When you get your client credentials, you will need to include the following operation permission:
* <code>"operations": [ "video-cloud/playlist/all" ]</code>

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {
              "count" : 22
            }

## Get a list of playlists [/accounts/{account_id}/playlists]

The playlists endpoint returns a list of playlist objects

### GET

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            [
                {
                  "id" : "3907894074001",
                  "account_id" : "57838016001",
                  "created_at" : "2014-11-26T16:42:19.161Z",
                  "description" : null,
                  "favorite" : false,
                  "limit" : 30,
                  "name" : "Bird Videos",
                  "reference_id" : null,
                  "search" : "+tags:\"bird\",\"birds\"",
                  "type" : "ACTIVATED_NEWEST_TO_OLDEST",
                  "updated_at" : "2014-11-26T16:42:19.205Z",
                  "video_ids" : [ ]
                }, {
                  "id" : "3830671306001",
                  "account_id" : "57838016001",
                  "created_at" : "2014-10-14T13:51:39.956Z",
                  "description" : null,
                  "favorite" : false,
                  "limit" : 30,
                  "name" : "Untitled Playlist",
                  "reference_id" : null,
                  "search" : "+tags:\"insects\"",
                  "type" : "ACTIVATED_NEWEST_TO_OLDEST",
                  "updated_at" : "2014-10-14T13:51:39.991Z",
                  "video_ids" : [ ]
                }, {
                  "id" : "3702288293001",
                  "account_id" : "57838016001",
                  "created_at" : "2014-07-31T13:14:51.167Z",
                  "description" : null,
                  "favorite" : false,
                  "limit" : 100,
                  "name" : "short Playlist",
                  "reference_id" : null,
                  "search" : null,
                  "type" : "EXPLICIT",
                  "updated_at" : "2014-07-31T13:15:02.739Z",
                  "video_ids" : [ "734451480001", "68143720001" ]
                }
            ]

## Get a single playlist by id [/accounts/{account_id}/playlists/{playlist_id}]

Returns a single playlist with the playlist id specified

### GET

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + playlist_id (required string '999888777666') ... The Video Cloud playlist id

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body

            {
              "id" : "3702288293001",
              "account_id" : "57838016001",
              "created_at" : "2014-07-31T13:14:51.167Z",
              "description" : null,
              "favorite" : false,
              "limit" : 100,
              "name" : "short Playlist",
              "reference_id" : null,
              "search" : null,
              "type" : "EXPLICIT",
              "updated_at" : "2014-07-31T13:15:02.739Z",
              "video_ids" : [ "734451480001", "68143720001" ]
            }

## Get the video objects for a playlist [/accounts/{account_id}/playlists/{playlist_id}/videos]

### GET

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)
    + playlist_id (required string '999888777666') ... The Video Cloud playlist id

+ Request

    + Headers

            Authorization: Bearer {token}
            Content-Type: application/json

    + Body

            {}

+ Response 200

    + Body
            [ {
              "id" : "1195045807001",
              "account_id" : "57838016001",
              "complete" : true,
              "created_at" : "2011-10-02T15:32:51.073Z",
              "cue_points" : [ ],
              "custom_fields" : {
                "purpose" : "Training"
              },
              "description" : "Bugs-Butterfly",
              "duration" : 27495,
              "economics" : "AD_SUPPORTED",
              "folder_id" : null,
              "geo" : null,
              "images" : { },
              "link" : null,
              "long_description" : null,
              "name" : "Bugs-Butterfly",
              "reference_id" : "1195045807001",
              "schedule" : null,
              "sharing" : null,
              "state" : "ACTIVE",
              "tags" : [ "newtag", "wildlife", "insects" ],
              "text_tracks" : [ ],
              "updated_at" : "2014-10-31T18:30:12.257Z"
            } ]

# Group Manage Subscriptions

## Create or list subscriptions [/accounts/{account_id}/subscriptions]

The subscriptions endpoint is used to create and list subscriptions for notifications of changes in your video library.

### GET

Get a list of your subscriptions.

+ Parameters

    + account_id (required string `20318290001`) ... The Video Cloud account id (in older versions of Studio called the Publisher ID)


+ Request (application/json)

    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)

        [
            {
                "service_account": "999",
                "id": "25705474-16b7-47ab-ada6-20182e8cde74",
                "events": "video-change",
                "endpoint": "https://mylittlepony.com/notification"
            },
            {
                "service_account": "999",
                "id": "25705474-16b7-47ab-ada6-22182e8cda90",
                "events": "video-change",
                "endpoint": "http://moreexamples.com/endpoint"
            }
        ]

### POST

Create a subscription by providing the endpoint that notifications should be sent to.

+ Request (application/json)

    + Headers

            Authorization: Bearer {access_token}

    + Body

            {
              "endpoint": "http://solutions.brightcove.com:9002",
              "events": [
                    "video-change"
                ]
            }


+ Response 201 (application/json)

        {
            "service_account": "999",
            "id": "25705474-16b7-47ab-ada6-20182e8cde74",
            "events": [
                "video-change"
            ],
            "endpoint": "https://mylittlepony.com/notification"
        }

## Retrieve or delete a subscription [/accounts/{account_id}/subscriptions/{subscription_id}]

### GET

Retrieves a subscription

+ Request (application/json)

    + Headers

            Authorization: Bearer {access_token}

+ Response 200 (application/json)

        {
            "service_account": "999",
            "id": "25705474-16b7-47ab-ada6-20182e8cde74",
            "events": [
                "video-change"
            ],
            "endpoint": "https://mylittlepony.com/notification"
        }

### DELETE

Remove a subscription

+ Request (application/json)

    + Headers

            Authorization: Bearer {access_token}

+ Response 204

